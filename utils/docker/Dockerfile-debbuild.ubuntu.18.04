#
# Copyright 2019, Intel Corporation
#
# 'recipe' for Docker to build an Debian package
#
# Pull base image
FROM ubuntu:18.04
Maintainer John.E.Malmberg <John.E.Malmberg@intel.com>

# Install basic tools
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
            autoconf bash curl debhelper dh-make dpkg-dev doxygen gcc \
            git git-buildpackage locales make patch rpm wget

# libfabric
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
            libibverbs-dev libpsm-infinipath1-dev librdmacm-dev

ARG CACHEBUST=1

ENV UBUNTU_URL="https://launchpad.net/ubuntu/+archive/primary/+files"
RUN curl -sS -f -L -O ${UBUNTU_URL}/libpsm2-2_10.3.58-1_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libpsm2-dev_10.3.58-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./libpsm2-2_10.3.58-1_amd64.deb ./libpsm2-dev_10.3.58-1_amd64.deb

ARG JENKINS_URL=""
ENV JENKINS_PATH="${JENKINS_URL}/job/daos-stack/job"
ENV JENKINS_ART="lastSuccessfulBuild/artifact/artifacts"

ARG OFIBRANCH="PR-7"
ENV OFI_ART=\
"${JENKINS_PATH}/libfabric/job/${OFIBRANCH}/${JENKINS_ART}/ubuntu18.04"

# Mercury
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
            cmake libboost-dev libevent-dev pkg-config

RUN curl -sS -f -L -O ${OFI_ART}/libfabric1_1.7.1%7Erc1-1_amd64.deb; \
    curl -sS -f -L -O ${OFI_ART}/libfabric-dev_1.7.1%7Erc1-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./libfabric*_amd64.deb

# CaRT

ARG MERBRANCH="PR-7"
ENV MER_ART=\
"${JENKINS_PATH}/mercury/job/${MERBRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
            dh-python libcmocka-dev \
            libssl-dev libyaml-dev scons uuid-dev

RUN curl -sS -f -L -O ${UBUNTU_URL}/libopenmpi-dev_3.1.2-6_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libopenmpi3_3.1.2-6_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/openmpi-common_3.1.2-6_all.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/openmpi-bin_3.1.2-6_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libc6_2.28-0ubuntu1_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libc6-dev_2.28-0ubuntu1_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libc-dev-bin_2.28-0ubuntu1_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libc-bin_2.28-0ubuntu1_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libhwloc5_1.11.10-3_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libhwloc-dev_1.11.10-3_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libhwloc-plugins_1.11.10-3_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libpmix2_3.0.1-2_amd64.deb; \
    curl -sS -f -L -O ${UBUNTU_URL}/libpmix-dev_3.0.1-2_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./libpmix2_3.0.1-2_amd64.deb ./libpmix-dev_3.0.1-2_amd64.deb \
      ./libhwloc5_1.11.10-3_amd64.deb ./libhwloc-dev_1.11.10-3_amd64.deb \
      ./libhwloc-plugins_1.11.10-3_amd64.deb \
      ./libc6_2.28-0ubuntu1_amd64.deb ./libc6-dev_2.28-0ubuntu1_amd64.deb \
      ./libc-dev-bin_2.28-0ubuntu1_amd64.deb \
      ./libc-bin_2.28-0ubuntu1_amd64.deb \
      ./libopenmpi-dev_3.1.2-6_amd64.deb ./libopenmpi3_3.1.2-6_amd64.deb \
      ./openmpi-common_3.1.2-6_all.deb ./openmpi-bin_3.1.2-6_amd64.deb; \
    find /usr -name 'libpmix.so*'; \
    rm -f /usr/lib/x86_64-linux-gnu/pmix/lib/libpmix.so; \
    ln -s /usr/lib/x86_64-linux-gnu/pmix/lib/libpmix.so.2 \
      /usr/lib/x86_64-linux-gnu/pmix/lib/libpmix.so

RUN curl -sS -f -L -O ${MER_ART}/libmercury1_1.0.1-1_amd64.deb; \
    curl -sS -f -L -O ${MER_ART}/libmercury-dev_1.0.1-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./libmercury*_amd64.deb

# Temporarily needed until cart dependencies fixed

ARG OPABRANCH="master"
ENV OPA_ART=\
"${JENKINS_PATH}/openpa/job/${OPABRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN curl -sS -f -L -O ${OPA_ART}/libopa1_1.0.4-1_amd64.deb; \
    curl -sS -f -L -O ${OPA_ART}/libopa-dev_1.0.4-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./libopa*_amd64.deb;

# DAOS

ARG PMDKBRANCH="PR-5"
ENV PMDK_ART=\
"${JENKINS_PATH}/pmdk/job/${PMDKBRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN curl -sS -f -L -O ${PMDK_ART}/libpmem1_1.5.1-1_amd64.deb; \
    curl -sS -f -L -O ${PMDK_ART}/libpmem-dev_1.5.1-1_amd64.deb; \
    curl -sS -f -L -O ${PMDK_ART}/libpmemobj1_1.5.1-1_amd64.deb; \
    curl -sS -f -L -O ${PMDK_ART}/libpmemobj-dev_1.5.1-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./libpmem*_amd64.deb;


RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    golang libcmocka-dev libcunit1-dev libevent-dev \
    libnuma-dev libreadline-dev

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
                       software-properties-common &&                    \
    add-apt-repository ppa:jhli/libsafec;                               \
    add-apt-repository ppa:jhli/ipmctl;                                 \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
                       libsafec-dev libipmctl-dev

#Needed from 18.10 for SPDK
RUN curl -sS -f -L -O ${UBUNTU_URL}/fio_3.8-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./fio_*_amd64.deb

# DAOS needs newer libprotobuf-c
# pull from Ubuntu 18.10
RUN curl -sS -f -L -O ${UBUNTU_URL}/libprotobuf-c1_1.3.1-1_amd64.deb; \
   curl -sS -f -L -O ${UBUNTU_URL}/libprotobuf-c-dev_1.3.1-1_amd64.deb; \
   apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./libprotobuf*_amd64.deb

ARG CARTBRANCH="PR-165"
ENV CART_ART=\
"${JENKINS_PATH}/cart/job/${CARTBRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN curl -sS -f -L -O ${CART_ART}/cart_0.0.1-1_amd64.deb; \
    curl -sS -f -L -O ${CART_ART}/libcart-dev_0.0.1-1_amd64.deb; \
    curl -sS -f -L -O ${CART_ART}/libcart1_0.0.1-1_amd64.deb; \
    curl -sS -f -L -O ${CART_ART}/cart-tests_0.0.1-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./*cart*_amd64.deb

ARG ABTBRANCH="master"
ENV ABT_ART=\
"${JENKINS_PATH}/argobots/job/${ABTBRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN curl -sS -f -L -O ${ABT_ART}/libabt0_1.0~rc1-1_amd64.deb; \
    curl -sS -f -L -O ${ABT_ART}/libabt-dev_1.0~rc1-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./libabt*_amd64.deb

ARG FUSEBRANCH="PR-4"
ENV FUSE_ART=\
"${JENKINS_PATH}/fuse/job/${FUSEBRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN curl -sS -f -L -O ${FUSE_ART}/fuse3_3.4.2-1_amd64.deb; \
    curl -sS -f -L -O ${FUSE_ART}/libfuse3-3_3.4.2-1_amd64.deb; \
    curl -sS -f -L -O ${FUSE_ART}/libfuse3-dev_3.4.2-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./*fuse*_amd64.deb

ARG ISALBRANCH="PR-4"
ENV ISAL_ART=\
"${JENKINS_PATH}/isa-l/job/${ISALBRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN curl -sS -f -L -O ${ISAL_ART}/isal_2.26.0-1_amd64.deb; \
    curl -sS -f -L -O ${ISAL_ART}/libisal3_2.26.0-1_amd64.deb; \
    curl -sS -f -L -O ${ISAL_ART}/libisal-dev_2.26.0-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./*isal*_amd64.deb


ARG DPDKBRANCH="PR-4"
ENV DPDK_ART=\
"${JENKINS_PATH}/dpdk/job/${DPDKBRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN curl -sS -f -L -O ${DPDK_ART}/dpdk_18.02-1_amd64.deb; \
    curl -sS -f -L -O ${DPDK_ART}/dpdk1_18.02-1_amd64.deb; \
    curl -sS -f -L -O ${DPDK_ART}/dpdk-dev_18.02-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./dpdk*_amd64.deb

ARG SPDKBRANCH="PR-7"
ENV SPDK_ART=\
"${JENKINS_PATH}/spdk/job/${SPDKBRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN curl -sS -f -L -O ${SPDK_ART}/spdk_18.04-1_amd64.deb; \
    curl -sS -f -L -O ${SPDK_ART}/libspdk1_18.04-1_amd64.deb; \
    curl -sS -f -L -O ${SPDK_ART}/libspdk-dev_18.04-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./*spdk*_amd64.deb

ARG RAFTBRANCH="PR-26"
ENV RAFT_ART=\
"${JENKINS_PATH}/raft/job/${RAFTBRANCH}/${JENKINS_ART}/ubuntu18.04"

RUN curl -sS -f -L -O ${RAFT_ART}/raft_0.5.0-1_amd64.deb; \
    curl -sS -f -L -O ${RAFT_ART}/raft1_0.5.0-1_amd64.deb; \
    curl -sS -f -L -O ${RAFT_ART}/raft-dev_0.5.0-1_amd64.deb; \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      ./raft*_amd64.deb

# force an upgrade to get any newly built packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get upgrade -y; \
    apt-get autoremove -y
